* {
    --auburn: #a31f26ff;
    --arylide-yellow: #e3c567ff;
    --satin-sheen-gold: #c8963eff;
    --earth-yellow: #d9ae61ff;
    --dark-cyan: #548687ff;
    font-family: 'Roboto', sans-serif;
}

p {
    /*let the font size be determined by how large the screen is*/
    /*messed around until I got a good value*/
    font-size: calc(0.5em + 1vw);
}

a {
    text-decoration: none;
}

html,
body {
    height: 100%;
    width: 100%;
    background-color: var(--earth-yellow);
    margin: 0;
}

.container {
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
}

.container_1 {
    display: grid;
    grid-template-columns: 0.6fr 0.4fr;
    /* Dos columnas: la izquierda ocupa 2/3 del espacio, la derecha 1/3 */
    gap: 20px;
    /* Espacio entre columnas */
    padding: 20px;
}

.container_2 {
    display: grid;
    grid-template-columns: 0.4fr 0.6fr;
    /* Dos columnas: la izquierda ocupa 2/3 del espacio, la derecha 1/3 */
    gap: 20px;
    /* Espacio entre columnas */
    padding: 20px;
}

footer {
    background-color: var(--earth-yellow);
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
}

footer {
    padding: 5px;
}

footer>div>a {
    padding: 5px;
}

/* set the display to none so that is doesn't appear unless its open */
dialog:not(:target):not([open]) {
    display: none;
}

dialog {
    display: block;
    width: 50%;
    /*set position in middle of page  */
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);

    border-radius: 10px;
}

.close-dialog {
    /* set the text all the way to the right in its container*/
    float: right;
}

.title-dialog {
    margin-top: 0;
}


.return {
    position: relative;
    top: -10%;
    left: 50%;
}

.content {
    width: 100%;
    height: 100%;
    overflow-y: auto;
}

.row {
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: row;
    justify-content: space-around;
    align-items: center;
    align-content: center;
}

/* column is a class for each column en container*/
.col {
    height: 100%;
    /*fit content8*/
    justify-content: space-around;
}

@media screen and (max-width: 768px) {
    .left {
        width: 50%;
    }
    .right {
        width: 50%;
        grid-template-columns: repeat(2, 1fr);
    }
    .html {
        width: 100%;
    }
}

/*the width changes to 90% when the screen is smaller than 600px*/
@media screen and (max-width: 600px) {
    .left {
        width: 75%;
    }
    /*the width changes to 90% when the screen is smaller than 600px*/
    .right {
        width: 25%;
        grid-template-columns: repeat(1, 1fr);
    }
}

.left {
    /*the width is 100 minus the width of the right column*/
    width: 40%;

    background-color: blue;
    align-items: center;
    align-content: center;
    display: inline-flex;
    overflow: hidden;
    position: relative;
}

.video {
    /* have the video fit inside the container */
    height: 100%;
    width: 100%;
    object-fit: fill;
}

.logo {
    /*hover in the middle of the container 10% from the top*/
    position: absolute;
    left: 0;
    right: 0;
    top: 5%;
    margin: 0 auto;
    text-align: center;
    color: white;
    
}
.logo > h1 {
    font-size: 3em;
    font-weight: bold;
    margin: 0;
    padding: 0;
}

.logo img {
    width: 100%;
    height: auto;
    margin: 0 auto;
}

.right {
    /*in order to make the padding on the top and bottom work*/
    box-sizing: border-box;
    /*gradient between satin sheen gold and earth yellow*/
    background-color: var(--arylide-yellow);
    width: 60%;

    display: grid;
    column-gap: 2%;
    row-gap: 1%;
    padding: 1%;
    /*the width changes to 70% when the screen is smaller than 768px*/
    grid-template-columns: repeat(3, 1fr);
    /*hack to get the rows to be the same height*/
    grid-auto-rows: 1fr;
}


/*style the buttons inside sidebtn*/
.sidebtn a {

    display: flex;
    /*center the text vertically and horizontally*/
    align-items: center;
    justify-content: center;
    /*disable text underline*/
    text-decoration: none;
    text-align: center;
    background-color: var(--auburn);
    color: white;
    /* border: thick; */
    height: 100%;
    width: 100%;
    border-radius: 5px;
    font-size: 20px;
    font-weight: bold;
    cursor: pointer;
}

/* make the images pop out of the screen a bit when hovered in image-container*/
.image-container img:hover {
    transform: scale(1.1);
    transition: transform 0.5s;
}
.image-container img:not(:hover)
{
    transform: scale(1);
    transition: transform 0.5s;
}

.left-column {
    background-color: var(--auburn);
    padding: 20px;
    color: white;
    border-radius: 5px;
    /*increase font and line spacing and change font*/
    line-height: 1.5;

}

.right-column {
    background-color: var(--arylide-yellow);
    padding: 20px;
    border-radius: 5px;
    text-align: center;
}

.right-column>h1 {
    margin-top: 0;
}

.image-container {
    display: flex;
    flex-direction: column;
    /* Coloca las imágenes verticalmente */
    align-items: center;
    /* Centra las imágenes horizontalmente */
    max-width: 100%;
    /* Asegura que el contenedor no sea más ancho que su contenedor principal */
}

.image-container img {
    max-width: 100%;
    /* Asegura que las imágenes no sean más anchas que su contenedor */
    height: auto;
    /* Mantiene la proporción de aspecto de las imágenes */
    margin: 10px 0;
    /* Espacio entre las imágenes */
}

.highlight.active {
    color: var(--arylide-yellow);
    font-weight: bold;
}

.animate {
    opacity: 0;
    transition: all 1s;
    overflow: hidden;
}

.animate.active {
    opacity: 1;
}


.animate-left {
    transform: translateX(-100%);
}
.animate.active > .animate-left {
    animation: slide-in 1s forwards;
}

.animate-right {
    transform: translateX(100%);
}
.animate.active > .animate-right {
    animation: slide-in 1s forwards;
}
.animate > .animate-left {
    animation: slide-out 1s forwards;
}

.animate > .animate-right {
    animation: slide-out-right 1s forwards;
}
    
@keyframes slide-in {
    100% { transform: translateX(0%); }
}
    
@keyframes slide-out {
    0% { transform: translateX(0%); }
    100% { transform: translateX(-100%); }
}
@keyframes slide-out-right {
    0% { transform: translateX(0%); }
    100% { transform: translateX(100%); }
}
